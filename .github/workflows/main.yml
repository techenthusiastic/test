name: "Bump Version"

on:
  push:
    branches:
      - "master"

jobs:
  bump-version:
    name: "Bump Version on master"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v2"
        with:
          ref: ${{ github.ref }}
      - name: "cat package.json"
        run: cat ./package.json
      - name: "Automated Version Bump"
        id: version-bump
        uses: "phips28/gh-action-bump-version@master"
        with:
          tag-prefix: "v"
          # wording - (words to look for in commit message or PR description)
          minor-wording: "add,Adds,new"
          major-wording: "MAJOR,cut-major"
          patch-wording: "patch,fixes" # Providing patch-wording will override commits
          # defaulting to a patch bump.
          rc-wording: "RELEASE,alpha"
          # Don't make any change in the version if no-wording is matched
          default: ""

          # default branch - in which PR has to be merged
          target-branch: "master"

          # commit message - after the version in package json is updated
          commit-message: "CI: bumps version to {{version}} [skip ci]"

      - name: "cat package.json"
        run: cat ./package.json
      - name: "Output Step"
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

  publish:
    needs: bump-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v3
        with:
          always-auth: true
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
          # scope: "@octocat"
      - name: "Install Dependencies"
        run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
